name: Build
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      SONAR_SCANNER_VERSION: 4.7.0.2747
      SONAR_SERVER_URL: "https://sonarcloud.io"
      BUILD_WRAPPER_OUT_DIR: bw-outputs # Directory where build-wrapper output will be placed
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
#      - name: Download and set up sonar-scanner
#        run: |
#          curl -L -O https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
#          unzip -q build-wrapper-linux-x86.zip
#      - name: Download and set up build-wrapper
#        run: |
#          curl -L -O https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
#          unzip sonar-scanner-cli-4.7.0.2747-linux.zip
      - name: Run build-wrapper
        run: |
          export CONAN_SYSREQUIRES_MODE=enabled
          dnf groupinstall "Development Tools" -y
          sudo dnf update -y
          sudo dnf install -y gcc-c++ cmake pip mesa-libGL-devel mesa-libGLU-devel
#          sudo apt-get update
#          sudo apt-get install -y build-essential git pip curl libgl1-mesa-glx libgl-dev
#          sudo snap install cmake --classic
          pip install conan
          conan profile new default --detect
          conan profile update settings.compiler.libcxx=libstdc++11 default

  #          cmake -DCMAKE_BUILD_TYPE=MinSizeRel -G "CodeBlocks - Unix Makefiles" .
#          build-wrapper-linux-x86-64 --out-dir bw-outputs cmake --build . --target twelvechairs -- -j 2
      - name: Legacy Sonar
        run: |
          export CONAN_SYSREQUIRES_MODE=enabled
          curl -L -O https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
          unzip -q build-wrapper-linux-x86.zip
          cmake -DCMAKE_BUILD_TYPE=MinSizeRel -G "CodeBlocks - Unix Makefiles" .
          build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir bw-outputs cmake --build . --target learn_opengl -- -j 2
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          curl -L -O https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
          unzip sonar-scanner-cli-4.7.0.2747-linux.zip
#          sonar-scanner-4.7.0.2747-linux/bin/sonar-scanner
          sonar-scanner-4.7.0.2747-linux/bin/sonar-scanner --define sonar.host.url="https://sonarcloud.io" --define sonar.cfamily.build-wrapper-output="bw-outputs"
#          --define sonar.host.url="${{ env.SONAR_SERVER_URL }}" --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"
#          sonar-scanner --define sonar.host.url="https://sonarcloud.io" --define sonar.cfamily.build-wrapper-output="bw-outputs"
